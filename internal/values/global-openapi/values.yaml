x-extend:
  schema: config-values.yaml
type: object
default: {}
additionalProperties: false
properties:
  internal:
    additionalProperties: false
    type: object
    default: {}
    properties:
      modules:
        default: {}
        additionalProperties: false
        type: object
        properties:
          kubeRBACProxyCA:
            type: object
            default: {}
            properties:
              cert:
                x-examples: ["YjY0ZW5jX3N0cmluZwo="]
                x-dmt-default: "YjY0ZW5jX3N0cmluZwo="
                type: string
              key:
                x-examples: ["YjY0ZW5jX3N0cmluZwo="]
                x-dmt-default: "YjY0ZW5jX3N0cmluZwo="
                type: string
          resourcesRequests:
            type: object
            default: {}
            additionalProperties: false
            properties:
              milliCpuControlPlane:
                type: integer
                format: int64
                minimum: 0
                x-examples: [ 1024 ]
                x-dmt-default: 1024
                default: 0
              memoryControlPlane:
                type: integer
                format: int64
                minimum: 0
                x-examples: [ 536870912 ]
                x-dmt-default: 536870912
                default: 0
  clusterConfiguration:
    type: object
    description: |
      General parameters of a cluster.

      Defines, for example, network and CRI parameters, control plane version, etc. Some parameters can be changed after the cluster is bootstrapped, during its operation.

      To change the `ClusterConfiguration` resource in a running cluster, run the following command:

      ```shell
      kubectl -n d8-system exec -ti svc/deckhouse-leader -c deckhouse -- deckhouse-controller edit cluster-configuration
      ```
    additionalProperties: false
    required: [ apiVersion, kind, clusterType, kubernetesVersion, podSubnetCIDR, serviceSubnetCIDR, clusterDomain ]
    x-examples:
      - apiVersion: deckhouse.io/v1
        kind: ClusterConfiguration
        podSubnetNodeCIDRPrefix: "24"
        podSubnetCIDR: 10.244.0.0/16
        serviceSubnetCIDR: 192.168.0.0/16
        kubernetesVersion: "1.27"
        clusterDomain: k8s.internal
        clusterType: "Cloud"
        cloud:
          prefix: k8s-dev
          provider: Yandex
        proxy:
          httpProxy: https://user:password@proxy.company.my:8443
          httpsProxy: https://user:password@proxy.company.my:8443
          noProxy:
            - company.my
    x-dmt-default:
      apiVersion: deckhouse.io/v1
      kind: ClusterConfiguration
      podSubnetNodeCIDRPrefix: "24"
      podSubnetCIDR: 10.244.0.0/16
      serviceSubnetCIDR: 192.168.0.0/16
      kubernetesVersion: "1.27"
      clusterDomain: k8s.internal
      clusterType: "Cloud"
      cloud:
        prefix: k8s-dev
        provider: Yandex
      proxy:
        httpProxy: https://user:password@proxy.company.my:8443
        httpsProxy: https://user:password@proxy.company.my:8443
        noProxy:
          - company.my
    properties:
      apiVersion:
        type: string
        description: Version of the Deckhouse API.
        enum: [ deckhouse.io/v1, deckhouse.io/v1alpha1 ]
      kind:
        type: string
        enum: [ ClusterConfiguration ]
      clusterType:
        type: string
        x-unsafe: true
        description: |
          Type of the cluster infrastructure:
          - `Static` — a cluster on bare metal (physical servers) or virtual machines. In the case of virtual machines, it is assumed that Deckhouse doesn't have access to the API for managing virtual machines (they are managed by the administrator using the usual cloud infrastructure tools);
          - `Cloud` — a cluster deployed on the resources of a cloud infrastructure. This type implies that Deckhouse has access to the cloud infrastructure API for managing virtual machines.
        enum: [ Cloud, Static ]
      cloud:
        type: object
        x-unsafe: true
        description: |
          Cloud provider-related settings (if the `Cloud` [clusterType](#clusterconfiguration-clustertype) is used).
        required: [ provider ]
        additionalProperties: false
        properties:
          provider:
            type: string
            description: |
              Cloud provider.
            enum:
              - "OpenStack"
              - "AWS"
              - "GCP"
              - "Yandex"
              - "vSphere"
              - "Azure"
              - "VCD"
              - "Zvirt"
              - "Dynamix"
          prefix:
            type: string
            description: |
              A prefix of the objects to be created in the cloud.

              Is used, for example, to distinguish objects created for different clusters, to configure routing, etc.
            pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
      podSubnetCIDR:
        type: string
        x-unsafe: true
        description: |
          Address space of the cluster's Pods.

          > Caution! Normally, you won't be able to change the parameter in a running cluster. To avoid this limitation use specific flag.
      podSubnetNodeCIDRPrefix:
        type: string
        description: |
          The prefix of Pod network on a node.

          > Caution! Normally, you won't be able to change the parameter in a running cluster. To avoid this limitation use specific flag.
        default: "24"
      serviceSubnetCIDR:
        type: string
        x-unsafe: true
        description: |
          Address space of the cluster's services.

          > Caution! Normally, you won't be able to change the parameter in a running cluster. To avoid this limitation use specific flag.
      clusterDomain:
        type: string
        description: |
          Cluster domain (used for local routing).

          **Please note:** the domain must not match the domain used in the DNS name template in the [publicDomainTemplate](../deckhouse-configure-global.html#parameters-modules-publicdomaintemplate) parameter. For example, you cannot set `cluster Domain: cluster.local` and `publicDomainTemplate: %s.cluster.local` at the same time.

          > If you need to change a parameter in a running cluster, it is recommended to use [instructions](../modules/042-kube-dns/faq.html#how-do-i-replace-the-cluster-domain-with-minimal-downtime)
        default: "cluster.local"
      defaultCRI:
        type: string
        description: |
          The container runtime type that used on cluster nodes (NodeGroups) by default.

          If the value `NotManaged` is used, then Deckhouse does not manage the container runtime (and doesn't install it).
          In this case, it is necessary to use images for NodeGroups on which the container runtime is already installed.
        enum:
          - "Docker"
          - "Containerd"
          - "NotManaged"
        default: "Containerd"
      kubernetesVersion:
        type: string
        description: |
          Kubernetes control plane version to use in a cluster.

          Changing a parameter in a running cluster will [automatically update](https://deckhouse.io/products/kubernetes-platform/documentation/v1/modules/040-control-plane-manager/#version-control) the cluster's control plane version.

          If `Automatic` is specified, then the control plane version is used, which is considered stable at the moment. If the stable version of control plane is less than the maximum version that has ever been installed in the cluster, more than 1 minor version, then the version of the cluster will not be changed.
          The version may change when the minor version of the Deckhouse release is changed (see a corresponding release message).
        enum:
          - "1.27"
          - "1.28"
          - "1.29"
          - "1.30"
          - "1.31"
          - "Automatic"
      proxy:
        x-doc-d8Revision: ee
        type: object
        description: |
          Global proxy setup (mainly for working in air-gapped environments).

          The parameters described in this section will be translated into the environment variables `HTTP_PROXY`, `HTTPS_PROXY`, and `NO_PROXY` for all cluster nodes and Deckhouse components. This will result in HTTP(S) requests (curl, git, registry, etc.) to all resources not listed in the `noProxy` parameter being made through a proxy. Note that the `podSubnetCIDR` and `serviceSubnetCIDR` subnets, as well as the `clusterDomain` domain are added to `noProxy` automatically.

          > **Caution!** To avoid interfering with internal requests, make sure you list all the host subnets in the `noProxy` parameter.
        additionalProperties: false
        properties:
          httpProxy:
            type: string
            x-doc-d8Revision: ee
            pattern: ^https?://([!*'();&=+$,/?%#\[\]0-9a-zA-Z\.\-\_]+(\:[!*'();:@&=+$,/?%#\[\]0-9a-zA-Z\.\-\_]+)?@)?[0-9a-zA-Z\.\-]+(\:[0-9]{1,5})?$
            description: |
              Proxy URL for HTTP requests.

              If necessary, specify the proxy server's username, password, and port.
            x-examples:
              - 'http://proxy.company.my'
              - 'https://user:password@proxy.company.my:8443'
              - 'https://DOMAIN%5Cuser:password@proxy.company.my:8443'
              - 'https://user%40domain.local:password@proxy.company.my:8443'
            x-dmt-default: 'http://proxy.company.my'
          httpsProxy:
            type: string
            x-doc-d8Revision: ee
            pattern: ^https?://([!*'();&=+$,/?%#\[\]0-9a-zA-Z\.\-\_]+(\:[!*'();:@&=+$,/?%#\[\]0-9a-zA-Z\.\-\_]+)?@)?[0-9a-zA-Z\.\-]+(\:[0-9]{1,5})?$
            description: |
              Proxy URL for HTTPS requests.

              If necessary, specify the proxy server's username, password, and port.
            x-examples:
              - 'http://proxy.company.my'
              - 'https://user:password@proxy.company.my:8443'
              - 'https://DOMAIN%5Cuser:password@proxy.company.my:8443'
              - 'https://user%40domain.local:password@proxy.company.my:8443'
            x-dmt-default: 'http://proxy.company.my'
          noProxy:
            x-doc-d8Revision: ee
            description: |
              List of no proxy IP and domain entries.

              For wildcard domains, use a domain name with a dot prefix, e.g., ".example.com".
            type: array
            items:
              type: string
              pattern: '^[a-z0-9\-\./]+$'
    oneOf:
      - properties:
          clusterType:
            enum: [ Static ]
      - properties:
          clusterType:
            enum: [ Cloud ]
        cloud: { }
        required: [ cloud ]
  clusterIsBootstrapped:
    type: boolean
    description: |
      It indicates the cluster is bootstraped.
      The cluster is considered bootstrapped if configmap d8-system/d8-cluster-is-bootstraped exists or
      cluster has at least one non-master node
    x-examples: [ true ]
    x-dmt-default: true
  deckhouseVersion:
    type: string
    x-examples: [ dev ]
    x-dmt-default: dev
  deckhouseEdition:
    type: string
    enum: [Unknown, CE, FE, EE, CSE, BE, SE, SE-plus ]
    x-examples: [ FE ]
    x-dmt-default: FE
  enabledModules:
    type: array
    items:
      type: string
    x-examples:
      - ["cert-manager", "vertical-pod-autoscaler", "vertical-pod-autoscaler-crd", "prometheus", "priority-class", "prometheus-crd", "operator-prometheus", "operator-prometheus"]
      - ["cert-manager", "prometheus", "priority-class"]
    x-dmt-default:
      ["cert-manager", "vertical-pod-autoscaler", "vertical-pod-autoscaler-crd", "prometheus", "priority-class", "prometheus-crd", "operator-prometheus", "operator-prometheus"]
  discovery:
    additionalProperties: true
    type: object
    default: {}
    properties:
      clusterControlPlaneIsHighlyAvailable:
        type: boolean
        default: false
        x-examples: [ true, false ]
        x-dmt-default: true
      clusterMasterCount:
        type: integer
        minimum: 0
        x-examples: [ 1, 3 ]
        x-dmt-default: 1
      podSubnet:
        type: string
        pattern: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$'
        description: |
          Network subnet for pods
        x-examples: [ "10.222.0.0/24" ]
        x-dmt-default: "10.222.0.0/24"
      serviceSubnet:
        type: string
        pattern: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/[0-9]{1,2}$'
        description: |
          Network subnet for k8s services
        x-examples: [ "10.222.0.0/24" ]
        x-dmt-default: "10.222.0.0/24"
      defaultStorageClass:
        type: string
        # it is name of resource in kubernetes
        pattern: '[a-z0-9]([\-a-z0-9\.]*[a-z0-9])?'
        description: |
          Default storage class for cluster
          It gets form storage class annotated as "storageclass.beta.kubernetes.io/is-default-class" or "storageclass.kubernetes.io/is-default-class"
        x-examples: [ "default" ]
        x-dmt-default: "default"
      clusterDNSAddress:
        type: string
        pattern: '^([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})$'
        description: |
          DNS server in-cluster address
          It gets form service in kube-system namespace labeled as "kube-dns" or "coredns"
        x-examples: [ "10.222.0.1" ]
        x-dmt-default: "10.222.0.1"
      kubernetesCA:
        type: string
        description: |
          Kubernetes apiserver CA certificate.
          It gets from /var/run/secrets/kubernetes.io/serviceaccount/ca.crt file
        x-examples:
          - "K8S\nCA\nMultilne"
        x-dmt-default: "K8S\nCA\nMultilne"
      prometheusScrapeInterval:
        type: integer
        default: 30
        minimum: 1
        description: |
          Scrape interval for prometheus. In seconds
        x-examples: [ 1 ]
        x-dmt-default: 1
      clusterUUID:
        type: string
        description: |
          Unique cluster identifier
        x-examples: [ "f76f54dc-7ea0-11ec-899e-c70701aef75e" ]
        x-dmt-default: "f76f54dc-7ea0-11ec-899e-c70701aef75e"
      clusterDomain:
        type: string
        pattern: '^[0-9a-zA-Z._-]+$'
        x-examples: [ "cluster.local" ]
        x-dmt-default: "cluster.local"
      d8SpecificNodeCountByRole:
        # it is map node_role => count
        # we can have multiple roles, for example every module has our own role
        additionalProperties: true
        type: object
        default: {}
        description: |
          Map node-role => count.
          Node will have role 'some-role' if it has label with prefix node-role.deckhouse.io/
          Do not use label with prefix node-role.deckhouse.io/ on workers nodes!
        x-examples:
          - system: 2
        x-dmt-default:
          system: 2
      kubernetesVersions:
        type: array
        items:
          type: string
          # https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
          pattern: ^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
        description: |
          K8s versions for each control-plane node
        x-examples:
          - [ "1.29.2", "1.29.3", "1.29.2" ]
        x-dmt-default: [ "1.29.2", "1.29.3", "1.29.2" ]
      kubernetesVersion:
        type: string
        # https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
        pattern: ^(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
        description: |
          Effective (minimal from each control plane node) k8s version
        x-examples: [ "1.29.2" ]
        x-dmt-default: "1.29.2"
      extensionAPIServerAuthenticationRequestheaderClientCA:
        type: string
        description: |
          The CA for verification requests to our custom modules from clients inside cluster.
          It gets from kube-system/extension-apiserver-authentication config map
        x-examples:
          - "extention\nCA\nMultiline"
        x-dmt-default: "extention\nCA\nMultiline"
      apiVersions:
        type: array
        items:
          type: string
        description: |
          List of GVKs installed from the modules' crds directories.
        x-examples:
          - ["deckhouse.io/v1alpha1/NodeGroup", "deckhouse.io/v1beta1/NodeGroup", "monitoring.coreos.com/v1/PrometheusRule"]
        x-dmt-default: ["deckhouse.io/v1alpha1/NodeGroup", "deckhouse.io/v1beta1/NodeGroup", "monitoring.coreos.com/v1/PrometheusRule"]
  modulesImages:
    additionalProperties: true
    type: object
    default: {}
    properties:
      registry:
        type: object
        default: {}
        properties:
          path:
            type: string
            description: |
              Path of deckhouse repo
            x-examples: [ "/deckhouse/fe" ]
            x-dmt-default: "/deckhouse/fe"
          address:
            type: string
            description: |
              Domain of deckhouse repo
            x-examples: [ "registry.deckhouse.io" ]
            x-dmt-default: "registry.deckhouse.io"
          CA:
            type: string
            description: |
              Registry CA certificate
            x-examples: [ "registry\nCA\nMultiline" ]
            x-dmt-default: "registry\nCA\nMultiline"
          scheme:
            type: string
            enum: ["http", "https"]
            description: |
              Scheme for registry
            x-examples: [ "https" ]
            x-dmt-default: "https"
          dockercfg:
            type: string
            # source https://regex101.com/r/Pj4Ako/1
            pattern: ^(?:([a-z0-9A-Z+\/]){4})*([a-z0-9A-Z+\/])(?:([a-z0-9A-Z+\/])==|([a-z0-9A-Z+\/]){2}=|([a-z0-9A-Z+\/]){3})$
            description: |
              Docker config for registry from secret from d8-system/deckhouse-registry
          base:
            type: string
            # source https://regex101.com/r/7oJe0k/1
            # based on https://regex101.com/library/a98UqN
            pattern: ^([\w.\-_]+((:\d+|)(/[a-z0-9._-]+/[a-z0-9._-]+))|)(/|)([a-z0-9.\-_]+(/[a-z0-9.\-_]+|))
            description: |
              Deckhouse base for images repo, consist of address and path.
              It is used in the helm templates to generate the address of the container image.
              Almost always, concatinateds with tag from modulesImages.tag
            x-examples: [ "registry.example.com/deckhouse" ]
            x-dmt-default: "registry.example.com/deckhouse"
      tags:
        type: object
        default: {}
        # tags map module_name => map<image_name, tag>
        additionalProperties: true
        description: |
          Map module_name => map(image_name => tag)
          The map loads from /deckhouse/modules/images_digests.json file.
          That file generated on build stage.
          Values from this map uses in helm teplates for generating container image address in deployments sts...
        x-examples:
          - tags:
              module:
                image: hash
        x-dmt-default:
          tags:
            module:
              image: hash
