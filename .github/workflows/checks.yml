name: CI
on:
  push:
  pull_request:

env:
  # https://github.com/actions/setup-go#supported-version-syntax
  # ex:
  # - 1.18beta1 -> 1.18.0-beta.1
  # - 1.18rc1 -> 1.18.0-rc.1
  GO_VERSION: '1.23'

jobs:
  # Check if there is any dirty change for go mod tidy
  go-mod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Check go mod
        run: |
          go mod tidy
          git diff --exit-code go.mod
          git diff --exit-code go.sum

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1

  tests:
    needs: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Run tests
        run: make test

      - name: Extract coverage percentage
        id: coverage
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | grep total: | awk '{print substr($3, 1, length($3)-1)}')
          echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV

      - name: Generate coverage badge
        run: |
          COVERAGE=$(go tool cover -func=coverage.out | grep total: | awk '{print substr($3, 1, length($3)-1)}')
          COLOR="#4c1"
          VALUE=$COVERAGE
          # Use awk for floating point comparison instead of bc
          if awk "BEGIN {exit !($COVERAGE < 80)}"; then COLOR="#dfb317"; fi
          if awk "BEGIN {exit !($COVERAGE < 50)}"; then COLOR="#e05d44"; fi
          echo "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"120\" height=\"20\"><linearGradient id=\"b\" x2=\"0\" y2=\"100%\"><stop offset=\"0\" stop-color=\"#bbb\" stop-opacity=\".1\"/><stop offset=\"1\" stop-opacity=\".1\"/></linearGradient><mask id=\"a\"><rect width=\"120\" height=\"20\" rx=\"3\" fill=\"#fff\"/></mask><g mask=\"url(#a)\"><rect width=\"70\" height=\"20\" fill=\"#555\"/><rect x=\"70\" width=\"50\" height=\"20\" fill=\"$COLOR\"/><rect width=\"120\" height=\"20\" fill=\"url(#b)\"/></g><g fill=\"#fff\" text-anchor=\"middle\" font-family=\"Verdana,Geneva,DejaVu Sans,sans-serif\" font-size=\"11\"><text x=\"35\" y=\"15\" fill=\"#010101\" fill-opacity=\".3\">coverage</text><text x=\"35\" y=\"14\">coverage</text><text id=\"percent\" x=\"95\" y=\"15\" fill=\"#010101\" fill-opacity=\".3\">$VALUE%</text><text id=\"percent\" x=\"95\" y=\"14\">$VALUE%</text></g></svg>" > coverage.svg

      - name: Check if coverage badge changed
        id: coverage_changed
        run: |
          git fetch origin ${{ github.ref_name }}
          if ! git diff --exit-code origin/${{ github.ref_name }} -- coverage.svg; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Get last commit author
        id: last_author
        run: |
          AUTHOR_NAME=$(git log -1 --pretty=format:'%an')
          AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')
          echo "author_name=$AUTHOR_NAME" >> $GITHUB_OUTPUT
          echo "author_email=$AUTHOR_EMAIL" >> $GITHUB_OUTPUT

      - name: Commit and push changes
        if: steps.coverage_changed.outputs.changed == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: update test coverage badge [skip ci]'
          branch: ${{ github.ref_name }}
          file_pattern: coverage.svg
          commit_author: "${{ steps.last_author.outputs.author_name }} <${{ steps.last_author.outputs.author_email }}>"
